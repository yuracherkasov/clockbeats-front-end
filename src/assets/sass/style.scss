@import "imports";

/* ==========================================================================
   Browser Upgrade Prompt
   -------------------------------------------------------------------------- */

.browserupgrade {
	margin: 0.2em 0;
	background: $color-gray-lighten;
	color: $color-dark;
	padding: 0.2em 0;
}

/* ==========================================================================
   Author's custom styles
   -------------------------------------------------------------------------- */

html,
body,
#root,
.clockbeats {
	position: relative;
	width: 100%;
	height: 100%;
	overflow: hidden;
}

.clockbeats {
	padding-top: rem($main-header-height);
}

.main-content {
	height: calc(100vh - (#{$main-header-height} + 61px));
	display: flex;
	justify-content: center;

	.public & {
		height: inherit;
		overflow-y: auto;
		will-change: transform;
	}
}

.scenes {
	width: 100%;
	display: flex;
	flex-flow: column nowrap;
	align-items: stretch;
	padding: 0 16px;
	height: calc(100vh - (#{$main-header-height} + 61px));

	&--header {}
}

// TODO: move to some component or diff file with style
.meta {
	color: $color-gray-light;
	font-size: rem(12px);
	font-weight: 400;
	line-height: 1;

	display: flex;
	flex-flow: row nowrap;
	align-items: baseline;

	&.reactive {
		cursor: pointer;

		&:hover {
			color: rgba($color-brand, .6);
		}
	}

	&.reacted {
		color: rgba($color-brand, .8);
	}

	&--item {
		&:not(:last-child) {
			margin-right: rem(2px);
		}

		&__medium {
			font-size: rem(14px);
			margin-right: rem(4px);
		}
	}
}

.text-muted {
	color: $color-gray-light;
}

.not-muted {
	color: $color-gray-lighten;
}

.pull {
	&-right {
		margin-right: auto;
	}

	&-left {
		margin-left: auto;
	}
}

.text {
	&-small {
		font-size: rem(12px);
	}

	&-medium {
		font-size: rem(14px);
	}

	&-base {
		font-size: rem(16px);
	}

	&-huge {
		font-size: rem(21px);
	}
}

.borderless {
	border: none;
}

.overlapping {
	&:after {
		content: ' ';
		position: absolute;
		left: 0;
		bottom: 0;
		height: 25px;
		width: 100%;
		background: $color-white;
		background: linear-gradient(rgba($color-dark, 0), $color-white);
	}
}

// TODO: remove after replacing ReactModalPortal to Modal
.ReactModalPortal {
	position: fixed;
	z-index: 20;
}

.modal {

	&__overlay {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: rgba($color-gray-light, .6);
		z-index: 25;
		overflow: auto;
	}

	&__content {
		position: absolute;
		top: 40px;
		left: calc((50vw / 2));
		width: calc(50vw);
		min-height: 0;
		box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0px 3px 1px -2px rgba(0, 0, 0, 0.12);
		background-color: rgba($color-dark, 1);
		border-radius: 4px;
		outline: none;
		padding: 20px;
	}
}

.truncate {
	height: auto;
	position: relative;

	&__collapsed {
		overflow: hidden;
		max-height: rem(85px);

		&:after {
			content: ' ';
			position: absolute;
			left: 0;
			bottom: 0;
			height: rem(15px);
			width: 100%;
			background: linear-gradient(rgba($color-dark, 0), $color-dark);
		}
	}

	&__open {
		height: auto;
		max-height: 100%;
	}

	figure {
		min-height: rem(90px);
	}
}

.anchor {
	position: fixed;
	left: 0;
	bottom: 0;
	will-change: transform;

	.slide {
		transform: translateY(100%);
		transition: all 130ms ease-out;

		&-up {
			transform: translateY(rem(-61px));
		}
	}
}


.empty-list {
	margin: auto;
	text-align: center;

	&--message {
		display: inline-block;
		padding: rem(3px) rem(7px);
		background-color: rgba($color-gray, .4);
	}
}

.progress-line {
	width: 100%;
	height: rem(17px);
	position: relative;
	background-color: rgba($color-brand, .2);
	color: $color-white;
	text-align: center;

	&--fill {
		position: absolute;
		top: 0;
		left: 0;
		bottom: 0;
		right: 0;
		background-color: rgba($color-brand, .7);
	}
}

.artwork {
	min-width: 120px;
	width: 100%;
	height: 100%;
	display: inline-block;

	&__image {}
}
